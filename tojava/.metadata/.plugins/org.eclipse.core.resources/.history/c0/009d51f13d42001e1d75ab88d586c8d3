package groomton;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Scanner;

public class Bomb {

	public static void main(String[] args) throws Exception{
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int k=sc.nextInt();
		String[][] ground=new String[n][n];
		for (int i = 0; i < n; i++) {
			ground[i]=sc.nextLine().split(" ");
		}
		int[] x=new int[k];
		int[] y=new int[k];
		for (int i = 0; i < k; i++) {
			x[i] = sc.nextInt();
			y[i] = sc.nextInt();
			sc.nextLine();
		}
		int[][] bomGround=new int[n][n];
		int[] dx= {0, 0, 0, 1, -1};
		int[] dy= {0, 1, -1, 0, 0};
		int bomIndex=0;
		int GroundIndex=0;
		while (bomIndex<k) {
			int bomX=x[bomIndex]+dx[GroundIndex];
			int bomY=x[bomIndex]+dx[GroundIndex];
			if(bomX>=0&&bomX<n&&bomY>=0&&bomY<n&&ground[bomX][bomY].equals("0")) {
				bomGround[bomX][bomY]+=1;
			}
			if(bomX>=0&&bomX<n&&bomY>=0&&bomY<n&&ground[bomX][bomY].equals("@")) {
				bomGround[bomX][bomY]+=2;
			}
			if(GroundIndex<4) {
				GroundIndex++;
				continue;
			}
			GroundIndex=0;
			bomIndex++;
		}
		int max=0;
		int r=0;
		int c=0;
		while (r<n) {
			if(max<bomGround[r][c]) {
				max=bomGround[r][c];
			}
			if(c<n) {
				
			}
			
		}
		
		

	}

}
